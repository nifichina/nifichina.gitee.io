(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{384:function(t,r,a){"use strict";a.r(r);var s=a(25),v=Object(s.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"attributestojson"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attributestojson"}},[t._v("#")]),t._v(" AttributesToJSON")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("编辑人(全网同名)："),a("strong",[a("strong",[t._v("酷酷的诚")])]),t._v("  邮箱："),a("strong",[t._v("zhangchengk@foxmail.com")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[t._v("该处理器将输入流文件属性转成JSON表示形式。生成的JSON可以被写入一个名为“JSONAttributes”的新属性，也可以作为内容写入到流文件中。")]),t._v(" "),a("h2",{attrs:{id:"属性配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性配置"}},[t._v("#")]),t._v(" 属性配置")]),t._v(" "),a("p",[t._v("在下面的列表中，必需属性的名称以粗体显示。任何其他属性(不是粗体)都被认为是可选的，并且指出属性默认值（如果有默认值），以及属性是否支持表达式语言。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性名称")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("可选值")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Attribute List")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("逗号分隔的属性名列表，这些属性及属性值将包含在结果JSON中。如果该值为空，则将包含所有现有属性。此属性列表区分大小写，并支持包含逗号的属性名称。如果列表中指定的属性没有找到，它将以空字符串或空值被发送到结果JSON中 。"),a("br"),t._v("支持表达式语言:true")])]),t._v(" "),a("tr",[a("td",[t._v("Attributes Regular Expression")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("将根据流文件属性计算的正则表达式，以选择匹配的属性。此属性可与属性列表属性组合使用。"),a("br"),t._v("支持表达式语言:true")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("Destination")])]),t._v(" "),a("td",[t._v("flowfile-attribute")]),t._v(" "),a("td",[t._v("▪flowfile-attribute"),a("br"),t._v(" ▪flowfile-content")]),t._v(" "),a("td",[t._v("控制JSON值是作为新属性“JSONAttributes”写入，还是写入到流文件内容中。")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("Include Core Attributes")])]),t._v(" "),a("td",[t._v("true")]),t._v(" "),a("td",[t._v("▪true"),a("br"),t._v(" ▪false")]),t._v(" "),a("td",[t._v("设置JSON是否包含FlowFile org.apache.nifi.flowfile.attributes.CoreAttributes（每个流文件都有的核心属性）。")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("Null Value")])]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td",[t._v("▪true"),a("br"),t._v(" ▪false")]),t._v(" "),a("td",[t._v("如果为true，则结果JSON中不存在或为空的属性将为“null”。如果为false，将在JSON中放置一个空字符串")])])])]),t._v(" "),a("h2",{attrs:{id:"连接关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接关系"}},[t._v("#")]),t._v(" 连接关系")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("success")]),t._v(" "),a("td",[t._v("成功地将属性转换为JSON")])]),t._v(" "),a("tr",[a("td",[t._v("failure")]),t._v(" "),a("td",[t._v("未能将属性转换为JSON")])])])]),t._v(" "),a("h2",{attrs:{id:"读取属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取属性"}},[t._v("#")]),t._v(" 读取属性")]),t._v(" "),a("p",[t._v("没有指定。")]),t._v(" "),a("h2",{attrs:{id:"写属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写属性"}},[t._v("#")]),t._v(" 写属性")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("JSONAttributes")]),t._v(" "),a("td",[t._v("JSON 数据")])])])]),t._v(" "),a("h2",{attrs:{id:"状态管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态管理"}},[t._v("#")]),t._v(" 状态管理")]),t._v(" "),a("p",[t._v("此组件不存储状态。")]),t._v(" "),a("h2",{attrs:{id:"限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限制"}},[t._v("#")]),t._v(" 限制")]),t._v(" "),a("p",[t._v("此组件不受限制。")]),t._v(" "),a("h2",{attrs:{id:"输入要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入要求"}},[t._v("#")]),t._v(" 输入要求")]),t._v(" "),a("p",[t._v("此组件需要传入关系。")]),t._v(" "),a("h2",{attrs:{id:"系统资源方面的考虑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统资源方面的考虑"}},[t._v("#")]),t._v(" 系统资源方面的考虑")]),t._v(" "),a("p",[t._v("没有指定。")]),t._v(" "),a("h2",{attrs:{id:"应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),a("p",[t._v("该处理器就是将流文件的若干属性转成JSON数据，输出到输出流文件的属性或者内容当中 。")]),t._v(" "),a("h2",{attrs:{id:"示例说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例说明"}},[t._v("#")]),t._v(" 示例说明")]),t._v(" "),a("p",[t._v("流程模板xml(1.9.2)")]),t._v(" "),a("a",{attrs:{href:"../template/AttributesToJSON.xml",download:"AttributesToJSON.xml"}},[t._v("AttributesToJSON.xml")]),t._v(" "),a("p",[t._v("1：如图为GenerateFlowFile生成的流文件，AttributesToJSON配置json输出到流属性中，包含核心属性")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://nifichina.gitee.io/image/processors/AttributesToCSV/core.png",alt:""}})]),t._v(" "),a("p",[t._v("配置如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://nifichina.gitee.io/image/processors/AttributesToJSON/config.png",alt:""}})]),t._v(" "),a("p",[t._v("结果为：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://nifichina.gitee.io/image/processors/AttributesToJSON/result.png",alt:""}})]),t._v(" "),a("p",[t._v("2：例子1中同样的配置，但json输出到输出流的content中")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://nifichina.gitee.io/image/processors/AttributesToJSON/config2.png",alt:""}})]),t._v(" "),a("p",[t._v("结果为")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://nifichina.gitee.io/image/processors/AttributesToJSON/result2.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"公众号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#公众号"}},[t._v("#")]),t._v(" 公众号")]),t._v(" "),a("p",[t._v("关注公众号 得到第一手文章/文档更新推送。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://nifichina.gitee.io/image/donate/wechat.jpg",alt:""}})])])}),[],!1,null,null,null);r.default=v.exports}}]);