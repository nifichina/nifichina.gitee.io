(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{417:function(t,e,a){"use strict";a.r(e);var r=a(25),v=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"notify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notify"}},[t._v("#")]),t._v(" Notify")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("编辑人(全网同名)："),a("strong",[a("strong",[t._v("酷酷的诚")])]),t._v("  邮箱："),a("strong",[t._v("zhangchengk@foxmail.com")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[t._v("在分布式缓存中存储一个信号，还可以选择与FlowFile的属性一起缓存。一旦在缓存中发现此信号，将释放在相应的Wait处理器中保存的所有流文件。")]),t._v(" "),a("h2",{attrs:{id:"属性配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性配置"}},[t._v("#")]),t._v(" 属性配置")]),t._v(" "),a("p",[t._v("在下面的列表中，必需属性的名称以粗体显示。任何其他属性(不是粗体)都被认为是可选的，并且指出属性默认值（如果有默认值），以及属性是否支持表达式语言。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Default Value")]),t._v(" "),a("th",[t._v("Allowable Values")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("Release Signal Identifier")])]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("值或根据FlowFile和属性表达式语言计算的结果，以确定释放信号缓存键 "),a("br"),a("strong",[t._v("Supports Expression Language: true (will be evaluated using flow file attributes and variable registry)")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("Signal Counter Name")])]),t._v(" "),a("td",[t._v("default")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("值或根据FlowFile和属性表达式语言计算的结果，以确定信号计数器名称。当相应的Wait处理器需要知道不同类型事件（如成功或失败，或目标数据源名称等）的出现次数时，信号计数器名称非常有用。"),a("br"),a("strong",[t._v("Supports Expression Language: true (will be evaluated using flow file attributes and variable registry)")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("Signal Counter Delta")])]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("值或根据FlowFile和属性表达式语言计算的结果，以确定信号计数器增量。指定计数器应增加多少。例如，如果在上游流中以批处理的方式处理多个信号事件，则可以使用此属性一次性通知处理的事件数。零（0）有一个特殊的含义，它将目标计数清除回0，这在与Wait的Releasable FlowFile Count =0（0）模式一起使用时特别有用，以提供“开-关”类型的流控制。一个（1）可以打开一个相应的等待处理器，而零（0）可以使它否定，就像关闭一个门一样。"),a("br"),a("strong",[t._v("Supports Expression Language: true (will be evaluated using flow file attributes and variable registry)")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("Signal Buffer Count")])]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("指定在将信号通知高速缓存服务之前可以缓冲的最大传入流文件数。缓冲区越多，性能越好，因为当多个传入流文件共享同一信号标识符时，通过按信号标识符对信号进行分组，它减少了与缓存服务的交互次数。")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("Distributed Cache Service")])]),t._v(" "),a("td"),t._v(" "),a("td",[a("strong",[t._v("Controller Service API:")]),t._v(" "),a("br"),t._v("AtomicDistributedMapCacheClient"),a("br"),a("strong",[t._v("Implementations:")]),t._v(" *CouchbaseMapCacheClient"),a("br"),t._v("RedisDistributedMapCacheClientService"),a("br"),t._v("DistributedMapCacheClientService"),a("br"),t._v("HBase_1_1_2_ClientMapCacheService"),a("br"),t._v("HBase_2_ClientMapCacheService")]),t._v(" "),a("td",[t._v("Controller Service用于缓存释放信号，以便释放在相应的Wait处理器中排队的文件")])]),t._v(" "),a("tr",[a("td",[t._v("Attribute Cache Regex")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("名称与该正则表达式匹配的任何属性都将存储在分布式缓存中，以复制到从相应的Wait处理器释放的任何FlowFiles中。请注意，无论此值如何，都不会缓存uuid属性。如果为空，则不会缓存任何属性。")])])])]),t._v(" "),a("h2",{attrs:{id:"连接关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接关系"}},[t._v("#")]),t._v(" 连接关系")]),t._v(" "),a("h3",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("success")]),t._v(" "),a("td",[t._v("已在缓存中成功输入释放信号的所有FlowFiles将被路由到此关系")])]),t._v(" "),a("tr",[a("td",[t._v("failure")]),t._v(" "),a("td",[t._v("当无法访问缓存时，或者如果Release Signal Identifier计算的值为null或为空，则FlowFiles将被路由到该关系")])])])]),t._v(" "),a("h2",{attrs:{id:"读取属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取属性"}},[t._v("#")]),t._v(" 读取属性")]),t._v(" "),a("p",[t._v("没有指定。")]),t._v(" "),a("h2",{attrs:{id:"写属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写属性"}},[t._v("#")]),t._v(" 写属性")]),t._v(" "),a("h3",{attrs:{id:"-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[t._v("#")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("notified")]),t._v(" "),a("td",[t._v("所有FlowFiles都会写入一个属性“notified”。此属性的值为true，即通知了FlowFile，否则为false。")])])])]),t._v(" "),a("h2",{attrs:{id:"状态管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态管理"}},[t._v("#")]),t._v(" 状态管理")]),t._v(" "),a("p",[t._v("此组件不存储状态。")]),t._v(" "),a("h2",{attrs:{id:"限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限制"}},[t._v("#")]),t._v(" 限制")]),t._v(" "),a("p",[t._v("此组件不受限制。")]),t._v(" "),a("h2",{attrs:{id:"输入要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入要求"}},[t._v("#")]),t._v(" 输入要求")]),t._v(" "),a("p",[t._v("此组件需要传入关系。")]),t._v(" "),a("h2",{attrs:{id:"系统资源方面的考虑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统资源方面的考虑"}},[t._v("#")]),t._v(" 系统资源方面的考虑")]),t._v(" "),a("p",[t._v("没有指定。")]),t._v(" "),a("h2",{attrs:{id:"公众号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#公众号"}},[t._v("#")]),t._v(" 公众号")]),t._v(" "),a("p",[t._v("关注公众号 得到第一手文章/文档更新推送。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://nifichina.gitee.io/image/donate/wechat.jpg",alt:""}})])])}),[],!1,null,null,null);e.default=v.exports}}]);