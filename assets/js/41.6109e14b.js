(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{407:function(t,v,_){"use strict";_.r(v);var e=_(25),r=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"handlehttprequest-handlehttpresponse"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#handlehttprequest-handlehttpresponse"}},[t._v("#")]),t._v(" HandleHttpRequest_HandleHttpResponse")]),t._v(" "),_("hr"),t._v(" "),_("p",[t._v("编辑人(全网同名)："),_("strong",[_("strong",[t._v("酷酷的诚")])]),t._v("  邮箱："),_("strong",[t._v("zhangchengk@foxmail.com")])]),t._v(" "),_("hr"),t._v(" "),_("h2",{attrs:{id:"一、-handlehttprequest"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、-handlehttprequest"}},[t._v("#")]),t._v(" 一、 HandleHttpRequest")]),t._v(" "),_("h3",{attrs:{id:"描述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),_("p",[t._v("HandleHttpRequest该处理器启动HTTP服务器并侦听HTTP请求。对于每个请求，创建一个流文件并传输到“success”。此处理器需要与HandleHttpResponse处理器一起使用，以便创建Web服务。")]),t._v(" "),_("h3",{attrs:{id:"属性配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#属性配置"}},[t._v("#")]),t._v(" 属性配置")]),t._v(" "),_("p",[t._v("在下面的列表中，必需属性的名称以粗体显示。任何其他属性(不是粗体)都被认为是可选的，并且指出属性默认值（如果有默认值），以及属性是否支持表达式语言。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("属性名称")]),t._v(" "),_("th",[t._v("默认值")]),t._v(" "),_("th",[t._v("可选值")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("strong",[t._v("Listening Port")])]),t._v(" "),_("td",[t._v("80")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("HTTP请求端口")])]),t._v(" "),_("tr",[_("td",[t._v("Hostname")]),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td",[t._v("要绑定到的主机名。如果没有指定，将绑定到所有主机")])]),t._v(" "),_("tr",[_("td",[t._v("SSL Context Service")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Controller Service API:"),_("br"),t._v("RestrictedSSLContextService "),_("br"),t._v("Implementation: "),_("br"),_("a",{attrs:{href:""}},[t._v("StandardRestrictedSSLContextService")])]),t._v(" "),_("td",[t._v("用于保护服务器的SSL上下文服务。如果指定，服务器将只接受HTTPS请求;否则，服务器将只接受HTTP请求")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("HTTP Context Map")])]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Controller Service API: "),_("br"),t._v("HttpContextMap "),_("br"),t._v("Implementation:"),_("br"),t._v("[StandardHttpContextMap]")]),t._v(" "),_("td",[t._v("用于缓存HTTP请求信息的HTTP上下文映射控制器服务")])]),t._v(" "),_("tr",[_("td",[t._v("Allowed Paths")]),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td",[t._v("指定传入URL请求中允许的有效HTTP路径的正则表达式。如果指定了这个值，并且HTTP请求的路径不匹配这个正则表达式，处理器将以404:NotFound响应")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("Default URL Character Set")])]),t._v(" "),_("td",[t._v("UTF-8")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("HTTP请求不提供URL参数时用于解码URL参数的字符集")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("Allow GET")])]),t._v(" "),_("td",[t._v("true")]),t._v(" "),_("td",[t._v("▪true"),_("br"),t._v(" ▪false")]),t._v(" "),_("td",[t._v("允许HTTP GET方法")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("Allow POST")])]),t._v(" "),_("td",[t._v("true")]),t._v(" "),_("td",[t._v("▪true"),_("br"),t._v(" ▪false")]),t._v(" "),_("td",[t._v("允许HTTP POST方法")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("Allow PUT")])]),t._v(" "),_("td",[t._v("true")]),t._v(" "),_("td",[t._v("▪true"),_("br"),t._v(" ▪false")]),t._v(" "),_("td",[t._v("允许HTTP PUT方法")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("Allow DELETE")])]),t._v(" "),_("td",[t._v("true")]),t._v(" "),_("td",[t._v("▪true"),_("br"),t._v(" ▪false")]),t._v(" "),_("td",[t._v("允许HTTP DELETE方法")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("Allow HEAD")])]),t._v(" "),_("td",[t._v("false")]),t._v(" "),_("td",[t._v("▪true"),_("br"),t._v(" ▪false")]),t._v(" "),_("td",[t._v("允许HTTP HEAD方法")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("Allow OPTIONS")])]),t._v(" "),_("td",[t._v("false")]),t._v(" "),_("td",[t._v("▪true"),_("br"),t._v(" ▪false")]),t._v(" "),_("td",[t._v("允许HTTP OPTIONS方法")])]),t._v(" "),_("tr",[_("td",[t._v("Additional HTTP Methods")]),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td",[t._v("应该允许使用逗号分隔的非标准HTTP方法列表")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("Client Authentication")])]),t._v(" "),_("td",[t._v("No Authentication")]),t._v(" "),_("td",[t._v("▪No Authentication"),_("br"),t._v(" ▪Want Authentication"),_("br"),t._v(" ▪Need Authentication")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("Container Queue Size")])]),t._v(" "),_("td",[t._v("50")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Http请求容器的队列大小")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("Multipart Request Max Size")])]),t._v(" "),_("td",[t._v("1 MB")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Http请求容器的队列大小")])]),t._v(" "),_("tr",[_("td",[t._v("Multipart Read Buffer Size")]),t._v(" "),_("td",[t._v("512 KB")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("将传入文件的内容写入磁盘的阈值大小。只适用于内容类型:multipart/form-data的请求。它用于防止拒绝服务类型的攻击，防止填满堆或磁盘空间。")])])])]),t._v(" "),_("h2",{attrs:{id:"连接关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#连接关系"}},[t._v("#")]),t._v(" 连接关系")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("sucess")]),t._v(" "),_("td",[t._v("接收到的所有内容都被路由到“success”关系")])])])]),t._v(" "),_("h2",{attrs:{id:"读取属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#读取属性"}},[t._v("#")]),t._v(" 读取属性")]),t._v(" "),_("p",[t._v("没有指定。")]),t._v(" "),_("h2",{attrs:{id:"写属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#写属性"}},[t._v("#")]),t._v(" 写属性")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("http.context.identifier")]),t._v(" "),_("td",[t._v("允许HandleHttpRequest和HandleHttpResponse协调哪个流文件属于哪个HTTP请求/响应的标识符。")])]),t._v(" "),_("tr",[_("td",[t._v("mime.type")]),t._v(" "),_("td",[t._v("数据的MIME类型（HTTP头“Content-Type”）")])]),t._v(" "),_("tr",[_("td",[t._v("http.servlet.path")]),t._v(" "),_("td",[t._v("请求URL中被认为是Servlet路径的部分")])]),t._v(" "),_("tr",[_("td",[t._v("http.context.path")]),t._v(" "),_("td",[t._v("请求URL中被认为是上下文路径的部分")])]),t._v(" "),_("tr",[_("td",[t._v("http.method")]),t._v(" "),_("td",[t._v("用于请求的HTTP方法，如GET或POST")])]),t._v(" "),_("tr",[_("td",[t._v("http.local.name")]),t._v(" "),_("td",[t._v("服务器的IP地址/主机名")])]),t._v(" "),_("tr",[_("td",[t._v("http.server.port")]),t._v(" "),_("td",[t._v("服务器的监听端口")])]),t._v(" "),_("tr",[_("td",[t._v("http.query.string")]),t._v(" "),_("td",[t._v("请求URL的查询字符串部分")])]),t._v(" "),_("tr",[_("td",[t._v("http.remote.host")]),t._v(" "),_("td",[t._v("请求者的主机名")])]),t._v(" "),_("tr",[_("td",[t._v("http.remote.addr")]),t._v(" "),_("td",[t._v("请求者的主机名:端口")])]),t._v(" "),_("tr",[_("td",[t._v("http.remote.user")]),t._v(" "),_("td",[t._v("请求者的用户名")])]),t._v(" "),_("tr",[_("td",[t._v("http.protocol")]),t._v(" "),_("td",[t._v("通信协议")])]),t._v(" "),_("tr",[_("td",[t._v("http.request.uri")]),t._v(" "),_("td",[t._v("完整的请求URL")])]),t._v(" "),_("tr",[_("td",[t._v("http.auth.type")]),t._v(" "),_("td",[t._v("HTTP授权类型")])]),t._v(" "),_("tr",[_("td",[t._v("http.principal.name")]),t._v(" "),_("td",[t._v("发出请求的经过身份验证的用户的名称")])]),t._v(" "),_("tr",[_("td",[t._v("http.subject.dn")]),t._v(" "),_("td",[t._v("请求者的专有名称。除非将处理器配置为使用SSLContext服务，否则不会填充此值")])]),t._v(" "),_("tr",[_("td",[t._v("http.issuer.dn")]),t._v(" "),_("td",[t._v("颁发主体证书的实体的专有名称。除非将处理器配置为使用SSLContext服务，否则不会填充此值")])]),t._v(" "),_("tr",[_("td",[t._v("http.headers.XXX")]),t._v(" "),_("td",[t._v("请求中接收到的每个HTTP头都将添加为一个属性，前缀为“HTTP . Headers”。例如，如果请求包含一个名为“x-my-header”的HTTP头，那么该值将被添加到一个名为“HTTP . Header .x-my-header”的属性中。")])]),t._v(" "),_("tr",[_("td",[t._v("http.headers.multipart.XXX")]),t._v(" "),_("td",[t._v("在mulipart请求中接收到的每个HTTP头都将作为一个属性添加，前缀为“HTTP .header .multipart”。例如，如果多部分请求包含一个名为“content- dispose”的HTTP头，那么该值将被添加到一个名为“HTTP . Header .multipart.content- dispose”的属性中。")])]),t._v(" "),_("tr",[_("td",[t._v("http.multipart.size")]),t._v(" "),_("td",[t._v("对于内容类型为“multipart/form-data”的请求，将该部分的内容大小记录到该属性中")])]),t._v(" "),_("tr",[_("td",[t._v("http.multipart.content.type")]),t._v(" "),_("td",[t._v("对于内容类型为“multipart/form-data”的请求，将该部分的内容类型记录到此属性中")])]),t._v(" "),_("tr",[_("td",[t._v("http.multipart.name")]),t._v(" "),_("td",[t._v("对于内容类型为“multipart/form-data”的请求，将部件的名称记录到此属性中")])]),t._v(" "),_("tr",[_("td",[t._v("http.multipart.filename")]),t._v(" "),_("td",[t._v("对于内容类型为“multipart/form-data”的请求，当该部分包含已上载的文件时，将文件的名称记录到此属性中")])]),t._v(" "),_("tr",[_("td",[t._v("http.multipart.fragments.sequence.number")]),t._v(" "),_("td",[t._v("对于内容类型为“multipart/form-data”的请求，将part的索引记录到这个属性中。索引从1开始。")])]),t._v(" "),_("tr",[_("td",[t._v("http.multipart.fragments.total.number")]),t._v(" "),_("td",[t._v("对于内容类型为“multipart/form-data”的请求，将所有部件的计数记录到此属性中。")])])])]),t._v(" "),_("h3",{attrs:{id:"状态管理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#状态管理"}},[t._v("#")]),t._v(" 状态管理")]),t._v(" "),_("p",[t._v("此组件不存储状态。")]),t._v(" "),_("h3",{attrs:{id:"限制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#限制"}},[t._v("#")]),t._v(" 限制")]),t._v(" "),_("p",[t._v("此组件不受限制。")]),t._v(" "),_("h3",{attrs:{id:"输入要求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#输入要求"}},[t._v("#")]),t._v(" 输入要求")]),t._v(" "),_("p",[t._v("此组件不允许传入连接关系。")]),t._v(" "),_("h3",{attrs:{id:"系统资源方面的考虑"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#系统资源方面的考虑"}},[t._v("#")]),t._v(" 系统资源方面的考虑")]),t._v(" "),_("p",[t._v("没有指定。")]),t._v(" "),_("h2",{attrs:{id:"二、handlehttpresponse"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、handlehttpresponse"}},[t._v("#")]),t._v(" 二、HandleHttpResponse")]),t._v(" "),_("p",[t._v("该处理器向生成流文件的请求者发送HTTP响应。此处理器被设计为与HandleHttpRequest一起使用，以便创建web服务。")]),t._v(" "),_("h3",{attrs:{id:"属性配置-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#属性配置-2"}},[t._v("#")]),t._v(" 属性配置")]),t._v(" "),_("p",[t._v("在下面的列表中，必需属性的名称以粗体显示。任何其他属性(不是粗体)都被认为是可选的，并且指出属性默认值（如果有默认值），以及属性是否支持表达式语言。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("默认值")]),t._v(" "),_("th",[t._v("可选值")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("strong",[t._v("HTTP Status Code")])]),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td",[t._v("响应HTTP请求时使用的HTTP状态代码。有关更多信息，请参见RFC 2616的第10节"),_("br"),_("strong",[t._v("支持表达式语言")])])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("HTTP Context Map")])]),t._v(" "),_("td"),t._v(" "),_("td",[_("strong",[t._v("Controller Service API:")]),_("br"),t._v("HttpContextMap"),_("br"),_("strong",[t._v("Implementation:")]),t._v(" "),_("br"),t._v("StandardHttpContextMap")]),t._v(" "),_("td",[t._v("用于缓存HTTP请求信息的HTTP上下文映射控制器服务")])])])]),t._v(" "),_("h3",{attrs:{id:"动态属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#动态属性"}},[t._v("#")]),t._v(" 动态属性")]),t._v(" "),_("p",[t._v("该处理器允许用户指定属性的名称和值。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("属性名称")]),t._v(" "),_("th",[t._v("属性值")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("用户自由定义的属性名称")]),t._v(" "),_("td",[t._v("用户自由定义的属性值")]),t._v(" "),_("td",[t._v("在该处理器生成的文件流上添加用户自定义的属性。如果使用表达式语言，则每批生成的流文件只执行一次计算 .")])])])]),t._v(" "),_("p",[t._v("支持表达式语言:true(只使用变量注册表进行计算)")]),t._v(" "),_("h3",{attrs:{id:"连接关系-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#连接关系-2"}},[t._v("#")]),t._v(" 连接关系")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("success")]),t._v(" "),_("td",[t._v("当响应成功发送给请求者后，流文件将被路由到此关系。")])]),t._v(" "),_("tr",[_("td",[t._v("failure")]),t._v(" "),_("td",[t._v("如果处理器无法响应请求者，流文件将被路由到这个关系。例如，如果连接超时或NiFi在响应HTTP请求之前重新启动，就可能发生这种情况。")])])])]),t._v(" "),_("h3",{attrs:{id:"读取属性-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#读取属性-2"}},[t._v("#")]),t._v(" 读取属性")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("Name")]),t._v(" "),_("th",[t._v("Description")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("http.context.identifier")]),t._v(" "),_("td",[t._v("此属性的值用于查找HTTP响应，以便可以将正确的消息发送回请求者。如果缺少此属性，则流文件将被路由到“failure”。")])]),t._v(" "),_("tr",[_("td",[t._v("http.request.uri")]),t._v(" "),_("td",[t._v("客户端请求的URI的值。")])]),t._v(" "),_("tr",[_("td",[t._v("http.remote.host")]),t._v(" "),_("td",[t._v("客户端的IP地址。")])]),t._v(" "),_("tr",[_("td",[t._v("http.local.name")]),t._v(" "),_("td",[t._v("服务器的IP地址/主机名。")])]),t._v(" "),_("tr",[_("td",[t._v("http.server.port")]),t._v(" "),_("td",[t._v("服务器的监听端口。")])]),t._v(" "),_("tr",[_("td",[t._v("http.subject.dn")]),t._v(" "),_("td",[t._v("SSL专有名称(如果有的话)。")])])])]),t._v(" "),_("h3",{attrs:{id:"写属性-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#写属性-2"}},[t._v("#")]),t._v(" 写属性")]),t._v(" "),_("p",[t._v("没有指定。")]),t._v(" "),_("h3",{attrs:{id:"状态管理-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#状态管理-2"}},[t._v("#")]),t._v(" 状态管理")]),t._v(" "),_("p",[t._v("此组件不存储状态。")]),t._v(" "),_("h3",{attrs:{id:"限制-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#限制-2"}},[t._v("#")]),t._v(" 限制")]),t._v(" "),_("p",[t._v("此组件不受限制。")]),t._v(" "),_("h3",{attrs:{id:"输入要求-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#输入要求-2"}},[t._v("#")]),t._v(" 输入要求")]),t._v(" "),_("p",[t._v("此组件需要传入关系。")]),t._v(" "),_("h3",{attrs:{id:"系统资源方面的考虑-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#系统资源方面的考虑-2"}},[t._v("#")]),t._v(" 系统资源方面的考虑")]),t._v(" "),_("p",[t._v("没有指定。")]),t._v(" "),_("h2",{attrs:{id:"应用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),_("p",[t._v("HandleHttpRequest与HandleHttpResponse一起使用，两个处理器之间可能存储其他的处理器来提供一些业务处理逻辑，以便提供一个完整的web服务。其中StandardHttpContextMap也是必须的，StandardHttpContextMap中存储的是每个请求的唯一标示。")]),t._v(" "),_("h2",{attrs:{id:"示例说明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#示例说明"}},[t._v("#")]),t._v(" 示例说明")]),t._v(" "),_("p",[t._v("1：简单POST请求")]),t._v(" "),_("p",[t._v("HandleHttpRequest，配置9999端口，Allowed paths中配置/latest（如果不配置，访问则直接IP:端口），如下：")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://nifichina.gitee.io/image/processors/HandleHttpRequest_HandleHttpResponse/config.png",alt:""}})]),t._v(" "),_("p",[t._v("HandleHttpResponse配置如下：")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://nifichina.gitee.io/image/processors/HandleHttpRequest_HandleHttpResponse/config2.png",alt:""}})]),t._v(" "),_("p",[t._v("流程入下：")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://nifichina.gitee.io/image/processors/HandleHttpRequest_HandleHttpResponse/dataflow.png",alt:""}})]),t._v(" "),_("p",[t._v("使用POSTMAN工具模拟执行post请求：")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://nifichina.gitee.io/image/processors/HandleHttpRequest_HandleHttpResponse/result.png",alt:""}})]),t._v(" "),_("h2",{attrs:{id:"公众号"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#公众号"}},[t._v("#")]),t._v(" 公众号")]),t._v(" "),_("p",[t._v("关注公众号 得到第一手文章/文档更新推送。")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://nifichina.gitee.io/image/donate/wechat.jpg",alt:""}})])])}),[],!1,null,null,null);v.default=r.exports}}]);