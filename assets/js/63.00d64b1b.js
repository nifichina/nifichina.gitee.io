(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{430:function(e,t,r){"use strict";r.r(t);var v=r(25),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"avrorecordsetwriter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#avrorecordsetwriter"}},[e._v("#")]),e._v(" AvroRecordSetWriter")]),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("编辑人(全网同名)："),r("strong",[r("strong",[e._v("酷酷的诚")])]),e._v("  邮箱："),r("strong",[e._v("zhangchengk@foxmail.com")])]),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[e._v("#")]),e._v(" 描述")]),e._v(" "),r("p",[e._v("将数据以avro格式输出。")]),e._v(" "),r("h2",{attrs:{id:"属性配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性配置"}},[e._v("#")]),e._v(" 属性配置")]),e._v(" "),r("p",[e._v("在下面的列表中，必需属性的名称以粗体显示。任何其他属性(不是粗体)都被认为是可选的，并且指出属性默认值（如果有默认值），以及属性是否支持表达式语言。(1.11.4版本)")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("属性名称")]),e._v(" "),r("th",[e._v("默认值")]),e._v(" "),r("th",[e._v("可选值")]),e._v(" "),r("th",[e._v("描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("strong",[e._v("Schema Write Strategy")])]),e._v(" "),r("td",[e._v("avro-embedded")]),e._v(" "),r("td",[e._v("▪Embed Avro Schema"),r("br"),e._v("▪Set 'schema.name' Attribute"),r("br"),e._v("▪Set 'avro.schema' Attribute"),r("br"),e._v("▪HHWX Schema Reference Attributes"),r("br"),e._v("▪HWX Content-Encoded Schema Reference"),r("br"),e._v("▪Confluent Schema Registry Reference"),r("br"),e._v("▪Do Not Write Schema")]),e._v(" "),r("td",[e._v("指明如何输出chema信息。")])]),e._v(" "),r("tr",[r("td",[e._v("Schema Cache")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("Controller Service API:"),r("br"),e._v("RecordSchemaCacheService"),r("br"),e._v("Implementation: "),r("br"),e._v("VolatileSchemaCache")]),e._v(" "),r("td",[e._v("将schema添加到的缓存，以便记录读取器可以快速查找schema。")])]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("Schema Access Strategy")])]),e._v(" "),r("td",[e._v("inherit-record-schema")]),e._v(" "),r("td",[e._v("▪Use 'Schema Name' Property "),r("br"),e._v("▪Inherit Record Schema"),r("br"),e._v("▪Use 'Schema Text' Property")]),e._v(" "),r("td",[e._v("指定如何获取用于解释数据的schema信息。")])]),e._v(" "),r("tr",[r("td",[e._v("Schema Registry")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("Controller Service API:"),r("br"),e._v("SchemaRegistry"),r("br"),e._v("Implementations: "),r("br"),e._v("ConfluentSchemaRegistry"),r("br"),e._v("AvroSchemaRegistry"),r("br"),e._v("HortonworksSchemaRegistry")]),e._v(" "),r("td",[e._v("指定Schema策略的控制服务器")])]),e._v(" "),r("tr",[r("td",[e._v("Schema Name")]),e._v(" "),r("td",[e._v("${schema.name}")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("如果使用了Schema Registry,指定需要查找的schema的名称"),r("br"),e._v("支持表达式语言:true")])]),e._v(" "),r("tr",[r("td",[e._v("Schema Version")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("指定要在Schema Registry中查找的schema的版本，不指定则默认取最新版本"),r("br"),e._v("支持表达式语言:true")])]),e._v(" "),r("tr",[r("td",[e._v("Schema Branch")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("定在Schema Registry属性中查找schema时要使用的分支名称。如果选择的策略不支持branch，则忽略此配置"),r("br"),e._v("支持表达式语言:true")])]),e._v(" "),r("tr",[r("td",[e._v("Schema Text")]),e._v(" "),r("td",[e._v("${avro.schema}")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("Avro格式的schema文本"),r("br"),e._v("支持表达式语言:true")])]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("Compression Format")])]),e._v(" "),r("td",[e._v("NONE")]),e._v(" "),r("td",[e._v("▪BZIP2"),r("br"),e._v("▪DEFLATE"),r("br"),e._v("▪NONE"),r("br"),e._v("▪SNAPPY"),r("br"),e._v("▪LZO")]),e._v(" "),r("td",[e._v("avro数据的压缩类型")])]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("Cache Size")])]),e._v(" "),r("td",[e._v("1000")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("缓存schema的大小")])]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("Encoder Pool Size")])]),e._v(" "),r("td",[e._v("32")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("Avro写入器需要使用编码器。编码器的创建是昂贵的，但一旦创建，它们就可以重用。此属性控制可汇集和重用的编码器的最大数量。将此值设置得太小会导致性能下降，但将其设置得更高则会导致使用更多堆。如果Avro写入器配置了"),r("code",[e._v("Embed Avro Schema")]),e._v("的模式写入策略，则忽略此属性。"),r("br"),e._v("支持表达式语言:true")])])])]),e._v(" "),r("h2",{attrs:{id:"状态管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#状态管理"}},[e._v("#")]),e._v(" 状态管理")]),e._v(" "),r("p",[e._v("此组件不存储状态。")]),e._v(" "),r("h2",{attrs:{id:"限制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#限制"}},[e._v("#")]),e._v(" 限制")]),e._v(" "),r("p",[e._v("无。")]),e._v(" "),r("h2",{attrs:{id:"系统资源方面的考虑"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#系统资源方面的考虑"}},[e._v("#")]),e._v(" 系统资源方面的考虑")]),e._v(" "),r("p",[e._v("无")]),e._v(" "),r("h2",{attrs:{id:"深入讲解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#深入讲解"}},[e._v("#")]),e._v(" 深入讲解")]),e._v(" "),r("p",[e._v("在NIFI的Controller Service中，有一批以Reader、Writer结尾的读写器。AvroRecordSetWriter顾名思义，就是写avro格式数据的。")]),e._v(" "),r("p",[e._v("在属性配置里"),r("strong",[e._v("Cache Size")]),e._v("很简单，配置缓存大小，缓存schema信息的。")]),e._v(" "),r("p",[e._v("对于"),r("strong",[e._v("Schema Write Strategy")]),e._v("，有很多选项，他们都是跟AvroReader的"),r("code",[e._v("Schema Access Strategy")]),e._v("一一对应的。指定将schema信息写到输出流文件的哪个位置")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("Embed Avro Schema\n内置schema，将schema信息写到avro数据里")])]),e._v(" "),r("li",[r("p",[e._v("Set 'schema.name' Attribute\n将schema信息写到输出流的属性"),r("code",[e._v("schema.name")]),e._v("中")])]),e._v(" "),r("li",[r("p",[e._v("Set 'avro.schema' Attribute\n将schema信息写到输出流的属性"),r("code",[e._v("avro.schema")]),e._v("中")])]),e._v(" "),r("li",[r("p",[e._v("HWX Schema Reference Attributes\n将schema的描述信息写到流文件中的三个属性值中："),r("code",[e._v("schema.identifier")]),e._v(", "),r("code",[e._v("schema.version")]),e._v(", "),r("code",[e._v("schema.protocol.version")])])]),e._v(" "),r("li",[r("p",[e._v("HWX Content-Encoded Schema Reference\n将schema的描述信息写到流内容中，一个byte指明"),r("code",[e._v("protocol version")]),e._v(",紧跟着8个byte指明"),r("code",[e._v("schema identifier")]),e._v("，最后是4个byte指明"),r("code",[e._v("schema version")]),e._v(".")]),e._v(" "),r("p",[e._v("如果使用以上这两个配置，还得到官网上详情了解学习"),r("a",{attrs:{href:"https://github.com/hortonworks/registry",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/hortonworks/registry"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[e._v("Confluent Schema Registry Reference\n同上，查询schema所需要的信息编码内置到了流文件内容当中，详细还需到官网了解学习"),r("a",{attrs:{href:"http://docs.confluent.io/current/schema-registry/docs/serializer-formatter.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://docs.confluent.io/current/schema-registry/docs/serializer-formatter.html"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[e._v("Do Not Write Schema\n不写shemale信息")])])]),e._v(" "),r("p",[e._v("对于 "),r("strong",[e._v("Schema Access Strategy")]),e._v(" ,写avro数据也需要schema信息，此配置指明如何获取schema信息。")]),e._v(" "),r("ol",[r("li",[e._v("Use 'Schema Name' Property\n使用"),r("code",[e._v("Schema Name")]),e._v("配置，同时必须指定一个"),r("code",[e._v("Schema Registry")]),e._v("控制服务器。"),r("code",[e._v("Schema Name")]),e._v("用来指定schema的名称，然后提供给"),r("code",[e._v("Schema Registry")]),e._v("配置的控制服务器使用来获取schema。")]),e._v(" "),r("li",[e._v("Inherit Record Schema\n上游流文件数据内置了schema信息")]),e._v(" "),r("li",[e._v("Use 'Schema Text' Property\n这个也非常简单，手动指定一个schema。你可以直接在"),r("code",[e._v("Schema Text")]),e._v("的value里编辑schema文本，也可以在流文件属性或者变量注册表指定一个叫avro.schema的schema文本。当然，avro.schema是人为定义的，可修改。")])]),e._v(" "),r("h2",{attrs:{id:"公众号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#公众号"}},[e._v("#")]),e._v(" 公众号")]),e._v(" "),r("p",[e._v("关注公众号 得到第一手文章/文档更新推送。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://nifichina.gitee.io/image/donate/wechat.jpg",alt:""}})])])}),[],!1,null,null,null);t.default=_.exports}}]);