(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{429:function(e,t,r){"use strict";r.r(t);var v=r(25),a=Object(v.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"avroreader"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#avroreader"}},[e._v("#")]),e._v(" AvroReader")]),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("编辑人(全网同名)："),r("strong",[r("strong",[e._v("酷酷的诚")])]),e._v("  邮箱："),r("strong",[e._v("zhangchengk@foxmail.com")])]),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[e._v("#")]),e._v(" 描述")]),e._v(" "),r("p",[e._v("该控制服务器解析Avro数据，并将每个Avro记录作为单独的Record对象返回。 Avro数据可能内置schema数据，或者可以通过"),r("code",[e._v("Schema Access Strateg")]),e._v("属性提供的方法获取schema。")]),e._v(" "),r("h2",{attrs:{id:"属性配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性配置"}},[e._v("#")]),e._v(" 属性配置")]),e._v(" "),r("p",[e._v("在下面的列表中，必需属性的名称以粗体显示。任何其他属性(不是粗体)都被认为是可选的，并且指出属性默认值（如果有默认值），以及属性是否支持表达式语言。(1.11.4版本)")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("属性名称")]),e._v(" "),r("th",[e._v("默认值")]),e._v(" "),r("th",[e._v("可选值")]),e._v(" "),r("th",[e._v("描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("strong",[e._v("Schema Access Strategy")])]),e._v(" "),r("td",[e._v("embedded-avro-schema")]),e._v(" "),r("td",[e._v("▪Use 'Schema Name' Property"),r("br"),e._v("▪Use 'Schema Text' Property"),r("br"),e._v("▪HWX Schema Reference Attributes"),r("br"),e._v("▪HWX Content-Encoded Schema Reference"),r("br"),e._v("▪Confluent Content-Encoded Schema Reference"),r("br"),e._v("▪Use Embedded Avro Schema")]),e._v(" "),r("td",[e._v("指定如何获取用于解释数据的schema信息。")])]),e._v(" "),r("tr",[r("td",[e._v("Schema Registry")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("Controller Service API:"),r("br"),e._v("SchemaRegistry"),r("br"),e._v("Implementations: "),r("br"),e._v("ConfluentSchemaRegistry"),r("br"),e._v("AvroSchemaRegistry"),r("br"),e._v("HortonworksSchemaRegistry")]),e._v(" "),r("td",[e._v("指定Schema策略的控制服务器")])]),e._v(" "),r("tr",[r("td",[e._v("Schema Name")]),e._v(" "),r("td",[e._v("${schema.name}")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("如果使用了Schema Registry,指定需要查找的schema的名称"),r("br"),e._v("支持表达式语言:true")])]),e._v(" "),r("tr",[r("td",[e._v("Schema Version")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("指定要在Schema Registry中查找的schema的版本，不指定则默认取最新版本"),r("br"),e._v("支持表达式语言:true")])]),e._v(" "),r("tr",[r("td",[e._v("Schema Branch")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("定在Schema Registry属性中查找schema时要使用的分支名称。如果选择的策略不支持branch，则忽略此配置"),r("br"),e._v("支持表达式语言:true")])]),e._v(" "),r("tr",[r("td",[e._v("Schema Text")]),e._v(" "),r("td",[e._v("${avro.schema}")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("Avro格式的schema文本"),r("br"),e._v("支持表达式语言:true")])]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("Cache Size")])]),e._v(" "),r("td",[e._v("1000")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("缓存schema的大小")])])])]),e._v(" "),r("h2",{attrs:{id:"状态管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#状态管理"}},[e._v("#")]),e._v(" 状态管理")]),e._v(" "),r("p",[e._v("此组件不存储状态。")]),e._v(" "),r("h2",{attrs:{id:"限制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#限制"}},[e._v("#")]),e._v(" 限制")]),e._v(" "),r("p",[e._v("无。")]),e._v(" "),r("h2",{attrs:{id:"系统资源方面的考虑"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#系统资源方面的考虑"}},[e._v("#")]),e._v(" 系统资源方面的考虑")]),e._v(" "),r("p",[e._v("无")]),e._v(" "),r("h2",{attrs:{id:"深入讲解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#深入讲解"}},[e._v("#")]),e._v(" 深入讲解")]),e._v(" "),r("p",[e._v("在NIFI的Controller Service中，有一批以Reader、Writer结尾的读写器。AvroReader顾名思义，就是读取avro格式数据的。")]),e._v(" "),r("p",[e._v("在属性配置里我们看到只有两个是必填的。而"),r("strong",[e._v("Cache Size")]),e._v("很简单，配置缓存大小，缓存schema信息的。")]),e._v(" "),r("p",[e._v("对于"),r("strong",[e._v("Schema Access Strategy")]),e._v("，有很多选项，我们一个一个来说。")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("Use Embedded Avro Schema\n这是最常用的选项了，avro数据内置了schema信息，我们不需要额外的配置schema信息了。在NIFI的组件里比如ExecuteSQL AvroWriter等等都会设置把schema内置到avro数据里。")])]),e._v(" "),r("li",[r("p",[e._v("Use 'Schema Text' Property\n这个也非常简单，手动指定一个schema。你可以直接在"),r("code",[e._v("Schema Text")]),e._v("的value里编辑schema文本，也可以在流文件属性或者变量注册表指定一个叫avro.schema的schema文本。当然，avro.schema是人为定义的，可修改。")]),e._v(" "),r("p",[e._v("除了以上两个之外其他的选项，都必须配置"),r("code",[e._v("Schema Registry")]),e._v("才能使用。")])]),e._v(" "),r("li",[r("p",[e._v("Use 'Schema Name' Property\n使用"),r("code",[e._v("Schema Name")]),e._v("属性，选择这个选项，那么无疑程序会使用到"),r("code",[e._v("Schema Name")]),e._v("这个属性，同时必须指定一个"),r("code",[e._v("Schema Registry")]),e._v("控制服务器。"),r("code",[e._v("Schema Name")]),e._v("用来指定schema的名称，然后提供给"),r("code",[e._v("Schema Registry")]),e._v("配置的控制服务器使用。简单来说就是：选择"),r("code",[e._v("Schema Name")]),e._v("，就得配置一个"),r("code",[e._v("Schema Registry")]),e._v("，然后默认情况下程序会使用表达式语言读取一个叫schema.name的值，把这个值传给"),r("code",[e._v("Schema Registry")]),e._v("，让他去对应的地方查一个schema回来。当然，具体的控制服务器还可能使用到"),r("code",[e._v("Schema Version")]),e._v(" "),r("code",[e._v("Schema Branch")]),e._v("这些值。")])]),e._v(" "),r("li",[r("p",[e._v("HWX Schema Reference Attributes\nHWX是hortonworks的缩写，选择这个配置，程序会默认读取流文件中的三个属性值："),r("code",[e._v("schema.identifier")]),e._v(", "),r("code",[e._v("schema.version")]),e._v(", "),r("code",[e._v("schema.protocol.version")]),e._v(",然后用这三个值到"),r("code",[e._v("Schema Registry")]),e._v("指定的服务上获取schema")])]),e._v(" "),r("li",[r("p",[e._v("HWX Content-Encoded Schema Reference\n选择这个配置，流文件内容中会内置使用"),r("code",[e._v("Schema Registry")]),e._v("指定的服务上获取schema所需要的信息，一个byte指明"),r("code",[e._v("protocol version")]),e._v(",紧跟着8个byte指明"),r("code",[e._v("schema identifier")]),e._v("，最后是4个byte指明"),r("code",[e._v("schema version")]),e._v(".")]),e._v(" "),r("p",[e._v("如果使用以上这两个配置，还得到官网上详情了解学习"),r("a",{attrs:{href:"https://github.com/hortonworks/registry",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/hortonworks/registry"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[e._v("Confluent Content-Encoded Schema Reference\n同上，查询schema所需要的信息编码内置到了流文件内容当中，详细还需到官网了解学习"),r("a",{attrs:{href:"http://docs.confluent.io/current/schema-registry/docs/serializer-formatter.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://docs.confluent.io/current/schema-registry/docs/serializer-formatter.html"),r("OutboundLink")],1)])])]),e._v(" "),r("h2",{attrs:{id:"公众号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#公众号"}},[e._v("#")]),e._v(" 公众号")]),e._v(" "),r("p",[e._v("关注公众号 得到第一手文章/文档更新推送。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://nifichina.gitee.io/image/donate/wechat.jpg",alt:""}})])])}),[],!1,null,null,null);t.default=a.exports}}]);